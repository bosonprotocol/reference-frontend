[{"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/EscrowDiagram.js":"1","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/views/ConnectLayout.js":"2","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/modals/WalletConnect.js":"3","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/connectors.js":"4","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/hooks/index.js":"5","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/utils/index.js":"6","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/hooks/useContract.js":"7","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/Web3Status.js":"8","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/constants/index.js":"9","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/modal.js":"10","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/multicall/hooks.js":"11","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/lists/hooks.js":"12","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/store.js":"13","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/Icon.js":"14","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/utils/networkConnector.js":"15","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/utils/store.js":"16","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/index.js":"17","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/copyHelper.js":"18","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/Identicon.js":"19","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/reportWebVitals.js":"20","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/application/hooks.js":"21","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/multicall/actions.js":"22","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/App.js":"23","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/Modal.js":"24","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/views/Onboarding.js":"25","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/application/actions.js":"26","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/index.js":"27","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/lists/updater.js":"28","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/multicall/updater.js":"29","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/utils/retry.js":"30","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/application/reducer.js":"31","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/lists/actions.js":"32","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/views/Connect.js":"33"},{"size":1365,"mtime":1606808589497,"results":"34","hashOfConfig":"35"},{"size":1283,"mtime":1606812294158,"results":"36","hashOfConfig":"35"},{"size":11012,"mtime":1606816013886,"results":"37","hashOfConfig":"35"},{"size":1066,"mtime":1606813244699,"results":"38","hashOfConfig":"35"},{"size":11540,"mtime":1606812993080,"results":"39","hashOfConfig":"35"},{"size":1837,"mtime":1606816995261,"results":"40","hashOfConfig":"35"},{"size":1897,"mtime":1606812048583,"results":"41","hashOfConfig":"35"},{"size":1585,"mtime":1606814327406,"results":"42","hashOfConfig":"35"},{"size":45,"mtime":1606812555878,"results":"43","hashOfConfig":"35"},{"size":1355,"mtime":1606813122388,"results":"44","hashOfConfig":"35"},{"size":6236,"mtime":1606124002171,"results":"45","hashOfConfig":"35"},{"size":3116,"mtime":1606812955200,"results":"46","hashOfConfig":"35"},{"size":871,"mtime":1606813054078,"results":"47","hashOfConfig":"35"},{"size":1125,"mtime":1606813122390,"results":"48","hashOfConfig":"35"},{"size":6775,"mtime":1606813244702,"results":"49","hashOfConfig":"35"},{"size":3336,"mtime":1606813266558,"results":"50","hashOfConfig":"35"},{"size":1480,"mtime":1606817222640,"results":"51","hashOfConfig":"35"},{"size":1007,"mtime":1606814381540,"results":"52","hashOfConfig":"35"},{"size":514,"mtime":1606812777137,"results":"53","hashOfConfig":"35"},{"size":362,"mtime":1606314049118,"results":"54","hashOfConfig":"35"},{"size":255,"mtime":1606124002170,"results":"55","hashOfConfig":"35"},{"size":1067,"mtime":1606124002171,"results":"56","hashOfConfig":"35"},{"size":961,"mtime":1606825075789,"results":"57","hashOfConfig":"35"},{"size":1355,"mtime":1606813122388,"results":"58","hashOfConfig":"35"},{"size":4022,"mtime":1606808589499,"results":"59","hashOfConfig":"35"},{"size":118,"mtime":1606124002170,"results":"60","hashOfConfig":"35"},{"size":633,"mtime":1606124002170,"results":"61","hashOfConfig":"35"},{"size":3438,"mtime":1606816918422,"results":"62","hashOfConfig":"35"},{"size":7488,"mtime":1606816945185,"results":"63","hashOfConfig":"35"},{"size":1793,"mtime":1606817043222,"results":"64","hashOfConfig":"35"},{"size":554,"mtime":1606124002170,"results":"65","hashOfConfig":"35"},{"size":1669,"mtime":1606124002170,"results":"66","hashOfConfig":"35"},{"size":1478,"mtime":1606810100865,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fny1wo",{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/EscrowDiagram.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/views/ConnectLayout.js",["142","143"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/modals/WalletConnect.js",["144","145","146"],"import React, { useEffect, useState, useRef } from \"react\";\nimport Web3 from \"web3\";\nimport classNames from \"classnames\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useStore, usePrevious } from \"../../hooks\";\nimport { shortenAddress } from \"../../utils\";\nimport Modal from \"../Modal\";\nimport { injected, walletconnect, walletlink } from \"../../connectors\";\nimport WalletConnectIcon from \"../../images/walletconnect.svg\";\nimport MetaMaskLogo from \"../../images/metamask.png\";\nimport Identicon from \"../Identicon\";\nimport CopyHelper from \"../../copyHelper\";\n\nexport const MODAL_WALLET_CONNECT = \"modal_wallet_connect\";\n\nexport const WALLET_VIEWS = {\n    OPTIONS: \"options\",\n    OPTIONS_SECONDARY: \"options_secondary\",\n    ACCOUNT: \"account\",\n    PENDING: \"pending\",\n};\n\nexport function getWalletTitle({ account, walletView, setWalletView }) {\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n        return <h1 className=\"f5 ma0\">Account</h1>;\n    }\n    if (account && walletView === WALLET_VIEWS.OPTIONS) {\n        return (\n            <button\n                onClick={ () => setWalletView(WALLET_VIEWS.ACCOUNT) }\n                className=\"outline-0 primary5 fw5\"\n            >\n                Back\n            </button>\n        );\n    }\n    if (!account) {\n        return <h1 className=\"f5 ma0\">Connect to a wallet</h1>;\n    }\n}\n\nexport default function ModalWalletConnect({ modal, setModal }) {\n    const context = useWeb3React();\n    const { account } = context;\n    const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n\n    return (\n        <Modal\n            title={ getWalletTitle({ account, walletView, setWalletView }) }\n            setModal={ setModal }\n            modal={ modal }\n        >\n            <InnerModal isAccount={ account && walletView === WALLET_VIEWS.ACCOUNT }>\n                <WalletConnect\n                    onSuccess={ () => setModal(null) }\n                    walletView={ walletView }\n                    setWalletView={ setWalletView }\n                />\n            </InnerModal>\n        </Modal>\n    );\n}\n\n// export async function signMessage({ library, account, chainId }, connector) {\n//     const skipSignatureVerification = true;\n//     // let isSigningRequired = true;\n//\n//     const web3 = new Web3(library.provider);\n//     const urlParams = new URLSearchParams(window.location.search);\n//     const id = urlParams.get(\"id\");\n//     const callbackURL = urlParams.get(\"callbackURL\");\n//     const isNotRedirect =\n//         urlParams.get(\"redirect\") === \"false\" || !urlParams.get(\"redirect\");\n//     const fetch = require(\"node-fetch\");\n//     // if (connector.walletLink) {\n//     // if false that means request is from node-red\n//     if (isNotRedirect || connector.walletLink) {\n//         const result = {\n//             account,\n//         };\n//         processResponse(undefined, result, \"all\");\n//         return;\n//     }\n//\n//     const msgParams = JSON.stringify(\n//         formatEIP712Data(\n//             {\n//                 from: account,\n//                 id,\n//                 callbackURL: \"\",\n//             },\n//             chainId\n//         )\n//     );\n//     const params = [account, msgParams];\n//     const method = \"eth_signTypedData_v4\";\n//     web3.currentProvider.sendAsync(\n//         {\n//             method,\n//             params,\n//             account,\n//         },\n//         async (err, result) => {\n//             processResponse(err, result);\n//         }\n//     );\n//\n//     async function processResponse(err, result, authType) {\n//         const reqType = urlParams.get(\"req_type\");\n//         if (reqType === 'kchannel_connect' || reqType === 'kchannel_send') {\n//             return;\n//         }\n//         if (err) {\n//             return console.dir(err);\n//         }\n//         if (result.error) {\n//             alert(result.error.message);\n//         }\n//         if (result.error) return console.error(\"ERROR\", result);\n//         if (!isNotRedirect && callbackURL) {\n//             window.location.href =\n//                 callbackURL +\n//                 window.location.search +\n//                 `&signature=${ result.result }&account=${ account }`;\n//         }\n//         // callback wallet connect only if mode is tpc or airdrop\n//         if (isNotRedirect && callbackURL) {\n//             const data = {\n//                 id,\n//                 signature: result.result,\n//                 account: account,\n//                 authType,\n//             };\n//             try {\n//                 const response = await fetch(callbackURL, {\n//                     method: \"POST\",\n//                     headers: { \"Content-Type\": \"application/json\" },\n//                     body: JSON.stringify(data),\n//                 });\n//                 const responseData = await response.json();\n//                 // console.log(\"response\", responseData);\n//                 if (responseData.status)\n//                     alert(responseData.status);\n//             } catch (error) {\n//                 alert(error);\n//             }\n//         }\n//     }\n// }\n\nexport function WalletConnect({\n                                  onSuccess,\n                                  setWalletView,\n                                  walletView = WALLET_VIEWS.ACCOUNT,\n                              }) {\n    const isMounted = useRef(false);\n    const context = useWeb3React();\n    const {\n        chainId,\n        connector,\n        library,\n        account,\n        activate,\n        active,\n        error,\n    } = context;\n    const [connectorsByName] = useStore([\"connectorsByName\"]);\n\n    const previousAccount = usePrevious(account);\n\n    // close on connection, when logged out before\n    useEffect(() => {\n        if (isMounted.current && account && !previousAccount) {\n            if (onSuccess) onSuccess();\n        }\n    }, [account, previousAccount, onSuccess]);\n\n    // close modal when a connection is successful\n    const activePrevious = usePrevious(active);\n    const connectorPrevious = usePrevious(connector);\n    useEffect(() => {\n        if (!chainId) return;\n        if (\n            isMounted.current &&\n            ((active && !activePrevious) ||\n                (connector && connector !== connectorPrevious && !error))\n        ) {\n            if (setWalletView) setWalletView(WALLET_VIEWS.ACCOUNT);\n            // if (window.location.search)\n            //     signMessage({ account, chainId, library }, connector);\n        }\n    }, [\n        setWalletView,\n        active,\n        error,\n        chainId,\n        connector,\n        activePrevious,\n        connectorPrevious,\n    ]);\n\n    useEffect(() => {\n        isMounted.current = true;\n        return () => (isMounted.current = false);\n    }, []);\n\n    function onConnectionClicked(name) {\n        const current = connectorsByName[name];\n        activate(current);\n    }\n\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n        return <WalletAccount setWalletView={ setWalletView }/>;\n    }\n    return (\n        <>\n            <WalletListItem\n                name={ \"MetaMask\" }\n                imageName={ \"metamask.png\" }\n                isActive={ connector === injected }\n                onClick={ () => onConnectionClicked(\"MetaMask\") }\n            />\n            <WalletListItem\n                name={ \"WalletConnect\" }\n                imageName={ \"walletconnect.svg\" }\n                isActive={ connector === walletconnect }\n                onClick={ () => {\n                    // if the user has already tried to connect, manually reset the connector\n                    if (connector?.walletConnectProvider?.wc?.uri) {\n                        connector.walletConnectProvider = undefined;\n                    }\n                    onConnectionClicked(\"WalletConnect\");\n                } }\n                imageStyle={ { height: \"100%\", width: \"100%\" } }\n            />\n        </>\n    );\n}\n\nfunction InnerModal({ children, isAccount }) {\n    return <div className={ \"pa4 \" + (isAccount ? \"pt0\" : \"\") }>{ children }</div>;\n}\n\nfunction WalletListItem({\n                            name,\n                            imageName,\n                            onClick,\n                            isActive,\n                            imageStyle = {},\n                        }) {\n    return (\n        <div\n            onClick={ onClick ? onClick : null }\n            className={ classNames(\n                \"br3 mb3 ph3 pv2 ba b--black-10 flex justify-between items-center pointer\",\n                {\n                    \"hover-b--primary5\": !isActive,\n                    \"bg-gray8\": isActive,\n                }\n            ) }\n        >\n            <div className=\"f5 flex items-center\">\n                { isActive ? (\n                    <div className=\"flex items-center justify-center green\">\n                        <div\n                            className=\"mr2 bg-green br-100\"\n                            style={ { height: \"8px\", width: \"8px\" } }\n                        >\n                            <div/>\n                        </div>\n                    </div>\n                ) : null }\n                { name }\n            </div>\n            <div className=\"w2 h2\">\n                <img\n                    src={ MetaMaskLogo }\n                    alt={ name + \"-\" + imageName }\n                    style={ imageStyle }\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction WalletAccount({ setWalletView }) {\n    const { account, connector } = useWeb3React();\n\n    function getStatusIcon() {\n        if (connector === injected) {\n            return <Identicon/>;\n        } else if (connector === walletconnect) {\n            return (\n                <div className=\"h1 w1 ml3\">\n                    <img src={ WalletConnectIcon } alt={ \"walletconnect logo\" }/>\n                </div>\n            );\n        }\n    }\n\n    function getName() {\n        if (connector === injected) {\n            return \"MetaMask\";\n        } else if (connector === walletconnect) {\n            return \"WalletConnect\";\n        }\n    }\n\n    return (\n        <div className=\"br3 pa3 ba b--black-10\">\n            <div className=\"flex justify-between items-center mb3\">\n                <div className=\"f6 gray3\">Connected with { getName() }</div>\n                <button\n                    className=\"outline-0 f6 link br4 ba ph2 pv1 dib primary5 bg-primary9 underline-hover pointer\"\n                    onClick={ () => setWalletView(WALLET_VIEWS.OPTIONS) }\n                >\n                    Change\n                </button>\n            </div>\n            <div className=\"flex items-center mb3\">\n                { getStatusIcon() }\n                <span className=\"ml2 f4 fw5\">{ shortenAddress(account) }</span>\n            </div>\n            <div className=\"flex items-center\">\n                <CopyHelper toCopy={ account }>\n                    <span style={ { marginLeft: \"4px\" } }>Copy Address</span>\n                </CopyHelper>\n            </div>\n        </div>\n    );\n}\n",["147","148"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/connectors.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/hooks/index.js",["149","150","151","152","153","154","155","156","157","158"],"import { useEffect, useState, useRef, useCallback, useMemo } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Token } from \"@uniswap/sdk\";\nimport { parseBytes32String } from \"@ethersproject/strings\";\nimport copy from \"copy-to-clipboard\";\nimport { isMobile } from \"react-device-detect\";\nimport { store } from \"../store\";\nimport { NetworkContextName } from \"../constants\";\nimport { injected } from \"../connectors\";\nimport { isAddress, parseLocalStorage } from \"../utils\";\n// import { useDefaultTokenList } from \"../redux/lists/hooks\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"../redux/multicall/hooks\";\n// import { useTokenContract, useBytes32TokenContract } from \"./useContract\";\n\nexport function useLocalStorage(key, defaultValue, didChange = []) {\n    const [value, setStateValue] = useState(\n        parseLocalStorage(localStorage[key], key)\n    );\n\n    useEffect(() => {\n        let initialValue = parseLocalStorage(localStorage[key], key);\n        if (initialValue === null) {\n            initialValue = defaultValue;\n        }\n        setStateValue(initialValue);\n    }, didChange);\n    useEffect(() => {\n        function onStorageUpdate(e) {\n            if (e.detail.key !== key) return;\n            setStateValue(parseLocalStorage(e.detail.value, e.detail.key));\n        }\n\n        window.addEventListener(\"newStorageValue\", onStorageUpdate);\n        return () => {\n            window.removeEventListener(\"newStorageValue\", onStorageUpdate);\n        };\n    }, [key, setStateValue]);\n\n    function setValue(newValue) {\n        newValue = JSON.stringify(newValue);\n        localStorage[key] = newValue;\n        setStateValue(newValue);\n        const e = new CustomEvent(\"newStorageValue\", {\n            detail: { key, value: newValue },\n        });\n        window.dispatchEvent(e);\n    }\n\n    return [value, setValue];\n}\n\nexport function useStore(path, defaultValue = undefined) {\n    const [value, setValue] = useState({\n        value: store.get(path) || defaultValue,\n    });\n    useEffect(() => {\n        let value = store.get(path);\n        if (!value && typeof defaultValue !== \"undefined\") value = defaultValue;\n        setValue({ value });\n        return store.subscribe(path, (newValue) => {\n            setValue({ value: newValue });\n        });\n    }, [JSON.stringify(path)]);\n\n    function set(value) {\n        store.set(path, value);\n    }\n\n    return [value.value, set];\n}\n\nexport function usePrevious(value) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef();\n\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n}\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3React(); // specifically using useWeb3ReactCore because of what this hook does\n    const [tried, setTried] = useState(false);\n\n    useEffect(() => {\n        injected.isAuthorized().then((isAuthorized) => {\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true);\n                });\n            } else {\n                if (isMobile && window.ethereum) {\n                    activate(injected, undefined, true).catch(() => {\n                        setTried(true);\n                    });\n                } else {\n                    setTried(true);\n                }\n            }\n        });\n    }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (active) {\n            setTried(true);\n        }\n    }, [active]);\n\n    return tried;\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network they are on\n */\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3React(); // specifically using useWeb3React because of what this hook does\n\n    useEffect(() => {\n        const { ethereum } = window;\n\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            // TODO: Fix error on network change\n            const handleChainChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch((error) => {\n                    console.error(\"Failed to activate after chain changed\", error);\n                });\n            };\n\n            const handleAccountsChanged = (accounts) => {\n                if (accounts.length > 0) {\n                    // eat errors\n                    activate(injected, undefined, true).catch((error) => {\n                        console.error(\"Failed to activate after accounts changed\", error);\n                    });\n                }\n            };\n\n            ethereum.on(\"chainChanged\", handleChainChanged);\n            ethereum.on(\"accountsChanged\", handleAccountsChanged);\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener(\"chainChanged\", handleChainChanged);\n                    ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n                }\n            };\n        }\n        return;\n    }, [active, error, suppress, activate]);\n}\n\nexport function useCopyClipboard(timeout = 500) {\n    const [isCopied, setIsCopied] = useState(false);\n\n    const staticCopy = useCallback((text) => {\n        const didCopy = copy(text);\n        setIsCopied(didCopy);\n    }, []);\n\n    useEffect(() => {\n        if (isCopied) {\n            const hide = setTimeout(() => {\n                setIsCopied(false);\n            }, timeout);\n\n            return () => {\n                clearTimeout(hide);\n            };\n        }\n        return;\n    }, [isCopied, setIsCopied, timeout]);\n\n    return [isCopied, staticCopy];\n}\n\nexport function useActiveWeb3React() {\n    const context = useWeb3React();\n    const contextNetwork = useWeb3React(NetworkContextName);\n    return context.active ? context : contextNetwork;\n}\n\n// export function useAllTokens() {\n//     const { chainId } = useActiveWeb3React();\n//     // TODO - store user-added tokens\n//     const userAddedTokens = []; // useUserAddedTokens()\n//     const allTokens = useDefaultTokenList();\n//\n//     return useMemo(() => {\n//         if (!chainId) return {};\n//         return (\n//             userAddedTokens\n//                 // reduce into all ALL_TOKENS filtered by the current chain\n//                 .reduce(\n//                     (tokenMap, token) => {\n//                         tokenMap[token.address] = token;\n//                         return tokenMap;\n//                     },\n//                     // must make a copy because reduce modifies the map, and we do not\n//                     // want to make a copy in every iteration\n//                     { ...allTokens[chainId] }\n//                 )\n//         );\n//     }, [chainId, userAddedTokens, allTokens]);\n// }\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/;\n\nfunction parseStringOrBytes32(str, bytes32, defaultValue) {\n    return str && str.length > 0\n        ? str\n        : bytes32 && BYTES32_REGEX.test(bytes32)\n            ? parseBytes32String(bytes32)\n            : defaultValue;\n}\n\n// // undefined if invalid or does not exist\n// // null if loading\n// // otherwise returns the token\n// export function useToken(tokenAddress) {\n//     const { chainId } = useActiveWeb3React();\n//     const tokens = useAllTokens();\n//\n//     const address = isAddress(tokenAddress);\n//\n//     const tokenContract = useTokenContract(address ? address : undefined, false);\n//     const tokenContractBytes32 = useBytes32TokenContract(\n//         address ? address : undefined,\n//         false\n//     );\n//     const token = address ? tokens[address] : undefined;\n//\n//     const tokenName = useSingleCallResult(\n//         token ? undefined : tokenContract,\n//         \"name\",\n//         undefined,\n//         NEVER_RELOAD\n//     );\n//     const tokenNameBytes32 = useSingleCallResult(\n//         token ? undefined : tokenContractBytes32,\n//         \"name\",\n//         undefined,\n//         NEVER_RELOAD\n//     );\n//     const symbol = useSingleCallResult(\n//         token ? undefined : tokenContract,\n//         \"symbol\",\n//         undefined,\n//         NEVER_RELOAD\n//     );\n//     const symbolBytes32 = useSingleCallResult(\n//         token ? undefined : tokenContractBytes32,\n//         \"symbol\",\n//         undefined,\n//         NEVER_RELOAD\n//     );\n//     const decimals = useSingleCallResult(\n//         token ? undefined : tokenContract,\n//         \"decimals\",\n//         undefined,\n//         NEVER_RELOAD\n//     );\n//\n//     return useMemo(() => {\n//         if (token) return token;\n//         if (!chainId || !address) return undefined;\n//         if (decimals.loading || symbol.loading || tokenName.loading) return null;\n//         if (decimals.result) {\n//             return new Token(\n//                 chainId,\n//                 address,\n//                 decimals.result[0],\n//                 parseStringOrBytes32(\n//                     symbol.result?.[0],\n//                     symbolBytes32.result?.[0],\n//                     \"UNKNOWN\"\n//                 ),\n//                 parseStringOrBytes32(\n//                     tokenName.result?.[0],\n//                     tokenNameBytes32.result?.[0],\n//                     \"Unknown Token\"\n//                 )\n//             );\n//         }\n//         return undefined;\n//     }, [\n//         address,\n//         chainId,\n//         decimals.loading,\n//         decimals.result,\n//         symbol.loading,\n//         symbol.result,\n//         symbolBytes32.result,\n//         token,\n//         tokenName.loading,\n//         tokenName.result,\n//         tokenNameBytes32.result,\n//     ]);\n// }\n\n// modified from https://usehooks.com/useDebounce/\nexport function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nconst VISIBILITY_STATE_SUPPORTED = \"visibilityState\" in document;\n\nfunction isWindowVisible() {\n    return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== \"hidden\";\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport function useIsWindowVisible() {\n    const [focused, setFocused] = useState(isWindowVisible());\n    const listener = useCallback(() => {\n        setFocused(isWindowVisible());\n    }, [setFocused]);\n\n    useEffect(() => {\n        if (!VISIBILITY_STATE_SUPPORTED) return;\n\n        document.addEventListener(\"visibilitychange\", listener);\n        return () => {\n            document.removeEventListener(\"visibilitychange\", listener);\n        };\n    }, [listener]);\n\n    return focused;\n}\n",["159","160"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/utils/index.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/hooks/useContract.js",["161","162","163","164","165","166","167","168"],"import { WETH } from \"@uniswap/sdk\";\nimport { useMemo } from \"react\";\nimport { ERC20_BYTES32_ABI } from \"../constants/abis/erc20\";\nimport ERC20_ABI from \"../constants/abis/erc20.json\";\nimport WETH_ABI from \"../constants/abis/weth.json\";\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from \"../constants/multicall\";\n// import { getContract } from \"../utils\";\nimport { useActiveWeb3React } from \"./index\";\n\n// // returns null on errors\n// function useContract(address, ABI, withSignerIfPossible = true) {\n//     const { library, account } = useActiveWeb3React();\n//\n//     return useMemo(() => {\n//         if (!address || !ABI || !library) return null;\n//         try {\n//             return getContract(\n//                 address,\n//                 ABI,\n//                 library,\n//                 withSignerIfPossible && account ? account : undefined\n//             );\n//         } catch (error) {\n//             console.error(\"Failed to get contract\", error);\n//             return null;\n//         }\n//     }, [address, ABI, library, withSignerIfPossible, account]);\n// }\n\n// export function useTokenContract(tokenAddress, withSignerIfPossible) {\n//     return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n// }\n//\n// export function useWETHContract(withSignerIfPossible) {\n//     const { chainId } = useActiveWeb3React();\n//     return useContract(\n//         chainId ? WETH[chainId].address : undefined,\n//         WETH_ABI,\n//         withSignerIfPossible\n//     );\n// }\n//\n// export function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n//     return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n// }\n//\n// export function useMulticallContract() {\n//     const { chainId } = useActiveWeb3React();\n//     return useContract(\n//         chainId && MULTICALL_NETWORKS[chainId],\n//         MULTICALL_ABI,\n//         false\n//     );\n// }\n","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/Web3Status.js",["169"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/constants/index.js",[],["170","171"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/modal.js",["172"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/multicall/hooks.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/lists/hooks.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/store.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/Icon.js",[],["173","174"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/utils/networkConnector.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/utils/store.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/index.js",["175","176","177"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/copyHelper.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/Identicon.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/reportWebVitals.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/application/hooks.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/multicall/actions.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/App.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/components/Modal.js",["178"],"import React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default function Modal({\n                                  title,\n                                  setModal,\n                                  children,\n                                  size = \"24rem\",\n                                  canClose = true,\n                              }) {\n    function onClose() {\n        if (canClose) setModal(null);\n    }\n\n    return (\n        <div className=\"flex items-center justify-center bg-black-80 fixed absolute--fill z-2\">\n            <div className=\"fixed absolute--fill\" onClick={ onClose }/>\n            <div\n                className=\"modal relative flex flex-column items-center mw6 mw7-ns mb7 mb4-ns\"\n                style={ { width: size } }\n            >\n                <div className=\"br0 shadow-4 bg-white br4-ns center w-100\">\n                    { title ? (\n                        <div className=\"flex items-center justify-between pa3\">\n                            <div className=\"di f5 fw5\">{ title }</div>\n                            <a className=\"gray4 hover-gray2\" onClick={ onClose }>\n                                <Icon name=\"x\"/>\n                            </a>\n                        </div>\n                    ) : null }\n                    { children }\n                </div>\n            </div>\n        </div>\n    );\n}\n","/Users/vlad/Projects/boson/bsn-frontend-prototype/src/views/Onboarding.js",["179"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/application/actions.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/index.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/lists/updater.js",["180"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/multicall/updater.js",["181","182"],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/utils/retry.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/application/reducer.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/redux/lists/actions.js",[],"/Users/vlad/Projects/boson/bsn-frontend-prototype/src/views/Connect.js",["183","184","185"],{"ruleId":"186","severity":1,"message":"187","line":4,"column":20,"nodeType":"188","messageId":"189","endLine":4,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":17,"column":8,"nodeType":"192","endLine":17,"endColumn":28,"suggestions":"193"},{"ruleId":"186","severity":1,"message":"194","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":12},{"ruleId":"186","severity":1,"message":"195","line":8,"column":35,"nodeType":"188","messageId":"189","endLine":8,"endColumn":45},{"ruleId":"186","severity":1,"message":"196","line":161,"column":9,"nodeType":"188","messageId":"189","endLine":161,"endColumn":16},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"186","severity":1,"message":"201","line":1,"column":52,"nodeType":"188","messageId":"189","endLine":1,"endColumn":59},{"ruleId":"186","severity":1,"message":"202","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":15},{"ruleId":"186","severity":1,"message":"203","line":10,"column":10,"nodeType":"188","messageId":"189","endLine":10,"endColumn":19},{"ruleId":"186","severity":1,"message":"204","line":12,"column":10,"nodeType":"188","messageId":"189","endLine":12,"endColumn":22},{"ruleId":"186","severity":1,"message":"205","line":12,"column":24,"nodeType":"188","messageId":"189","endLine":12,"endColumn":43},{"ruleId":"190","severity":1,"message":"206","line":26,"column":8,"nodeType":"188","endLine":26,"endColumn":17},{"ruleId":"190","severity":1,"message":"207","line":26,"column":8,"nodeType":"188","endLine":26,"endColumn":17,"suggestions":"208"},{"ruleId":"190","severity":1,"message":"209","line":63,"column":8,"nodeType":"192","endLine":63,"endColumn":30,"suggestions":"210"},{"ruleId":"190","severity":1,"message":"211","line":63,"column":9,"nodeType":"212","endLine":63,"endColumn":29},{"ruleId":"186","severity":1,"message":"213","line":217,"column":10,"nodeType":"188","messageId":"189","endLine":217,"endColumn":30},{"ruleId":"197","replacedBy":"214"},{"ruleId":"199","replacedBy":"215"},{"ruleId":"186","severity":1,"message":"216","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":14},{"ruleId":"186","severity":1,"message":"201","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":17},{"ruleId":"186","severity":1,"message":"217","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":27},{"ruleId":"186","severity":1,"message":"218","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":17},{"ruleId":"186","severity":1,"message":"219","line":5,"column":8,"nodeType":"188","messageId":"189","endLine":5,"endColumn":16},{"ruleId":"186","severity":1,"message":"220","line":6,"column":10,"nodeType":"188","messageId":"189","endLine":6,"endColumn":23},{"ruleId":"186","severity":1,"message":"221","line":6,"column":25,"nodeType":"188","messageId":"189","endLine":6,"endColumn":43},{"ruleId":"186","severity":1,"message":"222","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":28},{"ruleId":"186","severity":1,"message":"195","line":6,"column":35,"nodeType":"188","messageId":"189","endLine":6,"endColumn":45},{"ruleId":"197","replacedBy":"223"},{"ruleId":"199","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":26,"column":29,"nodeType":"227","endLine":26,"endColumn":82},{"ruleId":"197","replacedBy":"228"},{"ruleId":"199","replacedBy":"229"},{"ruleId":"186","severity":1,"message":"230","line":13,"column":8,"nodeType":"188","messageId":"189","endLine":13,"endColumn":19},{"ruleId":"186","severity":1,"message":"231","line":14,"column":8,"nodeType":"188","messageId":"189","endLine":14,"endColumn":26},{"ruleId":"186","severity":1,"message":"232","line":15,"column":8,"nodeType":"188","messageId":"189","endLine":15,"endColumn":24},{"ruleId":"225","severity":1,"message":"226","line":26,"column":29,"nodeType":"227","endLine":26,"endColumn":82},{"ruleId":"186","severity":1,"message":"233","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"234","line":10,"column":28,"nodeType":"188","messageId":"189","endLine":10,"endColumn":35},{"ruleId":"235","severity":2,"message":"236","line":117,"column":29,"nodeType":"188","messageId":"237","endLine":117,"endColumn":49},{"ruleId":"235","severity":2,"message":"238","line":145,"column":26,"nodeType":"188","messageId":"237","endLine":145,"endColumn":36},{"ruleId":"186","severity":1,"message":"239","line":8,"column":5,"nodeType":"188","messageId":"189","endLine":8,"endColumn":16},{"ruleId":"186","severity":1,"message":"196","line":13,"column":22,"nodeType":"188","messageId":"189","endLine":13,"endColumn":29},{"ruleId":"186","severity":1,"message":"240","line":13,"column":31,"nodeType":"188","messageId":"189","endLine":13,"endColumn":38},"no-unused-vars","'useLocalStorage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setModal'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'Web3' is defined but never used.","'walletlink' is defined but never used.","'library' is assigned a value but never used.","no-native-reassign",["242"],"no-negated-in-lhs",["243"],"'useMemo' is defined but never used.","'Token' is defined but never used.","'isAddress' is defined but never used.","'NEVER_RELOAD' is defined but never used.","'useSingleCallResult' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'defaultValue' and 'key'. Either include them or remove the dependency array.",["244"],"React Hook useEffect has missing dependencies: 'defaultValue' and 'path'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'parseStringOrBytes32' is defined but never used.",["242"],["243"],"'WETH' is defined but never used.","'ERC20_BYTES32_ABI' is defined but never used.","'ERC20_ABI' is defined but never used.","'WETH_ABI' is defined but never used.","'MULTICALL_ABI' is defined but never used.","'MULTICALL_NETWORKS' is defined but never used.","'useActiveWeb3React' is defined but never used.",["242"],["243"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["242"],["243"],"'ListUpdater' is defined but never used.","'ApplicationUpdater' is defined but never used.","'MulticallUpdater' is defined but never used.","'useEffect' is defined but never used.","'addList' is defined but never used.","no-undef","'useMulticallContract' is not defined.","undef","'chunkArray' is not defined.","'signMessage' is defined but never used.","'chainId' is assigned a value but never used.",{"desc":"246","fix":"247"},"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [autoPopup, account, setModal]",{"range":"252","text":"253"},"Update the dependencies array to be: [defaultValue, key]",{"range":"254","text":"255"},"Update the dependencies array to be: [defaultValue, path]",{"range":"256","text":"257"},[641,661],"[autoPopup, account, setModal]",[1109,1118],"[defaultValue, key]",[2300,2322],"[defaultValue, path]"]